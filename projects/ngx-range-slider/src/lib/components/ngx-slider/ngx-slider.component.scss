@use "sass:math";
@use '../../variables' as vars;


$handle-size: math.div(vars.$handleSize, 2);
$ticksCalculated: math.div(-(vars.$ticksHeight - vars.$barDimension), 2);
$bar-dimension: math.div(vars.$barDimension, 2);
$hand-pointer-size: math.div(vars.$handlePointerSize, 2);
$tick-width: math.div(vars.$ticksWidth, 2);


.ngx-slider {
  display: inline-block;
  position: relative;
  height: vars.$barDimension;
  width: 100%;
  margin: vars.$sliderMarginWithLabel 0 vars.$sliderMargin 0;
  vertical-align: middle;
  user-select: none;
  touch-action: pan-y;

  &.with-legend {
    margin-bottom: vars.$withLegendMargin;
  }

  &[disabled] {
    cursor: not-allowed;

    .ngx-slider-pointer {
      cursor: not-allowed;
      background-color: vars.$handleDisabledColor;
    }

    .ngx-slider-draggable {
      cursor: not-allowed;
    }

    .ngx-slider-selection {
      background: vars.$barDisabledFillColor;
    }

    .ngx-slider-tick {
      cursor: not-allowed;

      &.ngx-slider-selected {
        background: vars.$barDisabledFillColor;
      }
    }
  }

  .ngx-slider-span {
    white-space: nowrap;
    position: absolute;
    display: inline-block;
  }

  .ngx-slider-base {
    width: 100%;
    height: 100%;
    padding: 0;
  }

  .ngx-slider-bar-wrapper {
    left: 0;
    box-sizing: border-box;
    margin-top: -$handle-size;
    padding-top: $handle-size;
    width: 100%;
    height: vars.$handleSize;
    z-index: 1;
  }

  .ngx-slider-draggable {
    cursor: move;
  }

  .ngx-slider-bar {
    left: 0;
    width: 100%;
    height: vars.$barDimension;
    z-index: 1;
    background: vars.$barNormalColor;
    @include vars.rounded($bar-dimension);
  }

  .ngx-slider-bar-wrapper.ngx-slider-transparent .ngx-slider-bar {
    background: transparent;
  }

  .ngx-slider-bar-wrapper.ngx-slider-left-out-selection .ngx-slider-bar {
    background: vars.$barLeftOutSelectionColor;
  }

  .ngx-slider-bar-wrapper.ngx-slider-right-out-selection .ngx-slider-bar {
    background: vars.$barRightOutSelectionColor;
  }

  .ngx-slider-selection {
    z-index: 2;
    background: vars.$barFillColor;
    @include vars.rounded($bar-dimension);
  }

  .ngx-slider-pointer {
    cursor: pointer;
    width: vars.$handleSize;
    height: vars.$handleSize;
    top: -($handle-size) + $bar-dimension;
    background-color: vars.$handleBgColor;
    z-index: 3;
    @include vars.rounded($handle-size);

    &:after {
      content: '';
      width: vars.$handlePointerSize;
      height: vars.$handlePointerSize;
      position: absolute;
      top: $handle-size - $hand-pointer-size;
      left: $handle-size - $hand-pointer-size;
      @include vars.rounded(math.div(vars.$handlePointerSize, 2));
      background: vars.$handleInnerColor;
    }

    &:hover:after {
      background-color: vars.$handleHoverColor;
    }

    &.ngx-slider-active {
      z-index: 4;

      &:after {
        background-color: vars.$handleActiveColor;
      }
    }
  }

  .ngx-slider-bubble {
    cursor: default;
    bottom: $handle-size;
    padding: vars.$bubblePaddingVertical vars.$bubblePaddingHorizontal;
    color: vars.$labelTextColor;
    font-size: vars.$labelFontSize;

    &.ngx-slider-limit {
      color: vars.$limitLabelTextColor;
    }
  }

  .ngx-slider-ticks {
    box-sizing: border-box;
    width: 100%;
    height: 0;
    position: absolute;
    left: 0;
    top: $ticksCalculated;
    margin: 0;
    z-index: 1;
    list-style: none;
  }

  .ngx-slider-ticks-values-under {
    .ngx-slider-tick-value {
      top: auto;
      bottom: vars.$ticksValuePosition - 2;
    }
  }

  .ngx-slider-tick {
    text-align: center;
    cursor: pointer;
    width: vars.$ticksWidth;
    height: vars.$ticksHeight;
    background: vars.$ticksColor;
    border-radius: 50%;
    position: absolute;
    top: 0;
    left: 0;
    margin-left: $handle-size - $tick-width; // for centering

    &.ngx-slider-selected {
      background: vars.$selectedTicksColor;
    }
  }

  .ngx-slider-tick-value {
    position: absolute;
    top: vars.$ticksValuePosition;
    transform: translate(-50%, 0);
  }

  .ngx-slider-tick-legend {
    position: absolute;
    top: vars.$ticksLegendPosition;
    transform: translate(-50%, 0);
    max-width: vars.$tickLegendMaxWidth;
    white-space: normal;
  }

  &.vertical {
    position: relative;
    width: vars.$barDimension;
    height: 100%;
    margin: 0 vars.$sliderVerticalMargin;
    padding: 0;
    vertical-align: baseline;
    touch-action: pan-x;

    .ngx-slider-base {
      width: 100%;
      height: 100%;
      padding: 0;
    }

    .ngx-slider-bar-wrapper {
      top: auto;
      left: 0;
      margin: 0 0 0 (-($handle-size));
      padding: 0 0 0 $handle-size;
      height: 100%;
      width: vars.$handleSize;
    }

    .ngx-slider-bar {
      bottom: 0;
      left: auto;
      width: vars.$barDimension;
      height: 100%;
    }

    .ngx-slider-pointer {
      left: -($handle-size) + $bar-dimension !important;
      top: auto;
      bottom: 0;
    }

    .ngx-slider-bubble {
      left: $handle-size !important;
      bottom: 0;
    }

    .ngx-slider-ticks {
      height: 100%;
      width: 0;
      left: $ticksCalculated;
      top: 0;
      z-index: 1;
    }

    .ngx-slider-tick {
      vertical-align: middle;
      margin-left: auto;
      margin-top: $handle-size - $tick-width; // for centering
    }

    .ngx-slider-tick-value {
      left: vars.$ticksValuePositionOnVertical;
      top: auto;
      transform: translate(0, -28%);
    }

    .ngx-slider-tick-legend {
      top: auto;
      right: vars.$ticksLegendPosition;
      transform: translate(0, -28%);
      max-width: none;
      white-space: nowrap;
    }

    .ngx-slider-ticks-values-under {
      .ngx-slider-tick-value {
        bottom: auto;
        left: auto;
        right: vars.$ticksValuePositionOnVertical;
      }
    }
  }

  * {
    transition: none;
  }

  &.animate {
    .ngx-slider-bar-wrapper {
      transition: all linear vars.$animationDuration;
    }

    .ngx-slider-selection {
      transition: background-color linear vars.$animationDuration;
    }

    .ngx-slider-pointer {
      transition: all linear vars.$animationDuration;

      &:after {
        transition: all linear vars.$animationDuration;
      }
    }

    .ngx-slider-bubble {
      transition: all linear vars.$animationDuration;

      &.ngx-slider-limit {
        transition: opacity linear vars.$animationDuration;
      }

      &.ngx-slider-combined {
        transition: opacity linear vars.$animationDuration;
      }
    }

    .ngx-slider-tick {
      transition: background-color linear vars.$animationDuration;
    }
  }
}
